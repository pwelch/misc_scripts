#!/bin/bash

# Settings
readonly MYSQL_PASS='root'
readonly WP_USER='wordpress'
readonly WP_PASS='wordpress'
readonly WP_DB='wordpress'

# Global variables for script
readonly PROGNAME=$(basename $0)

install_packages() {
  # Skip prompt for MySQL root password on package install
  debconf-set-selections <<< "mysql-server mysql-server/root_password password ${MYSQL_PASS}"
  debconf-set-selections <<< "mysql-server mysql-server/root_password_again password ${MYSQL_PASS}"

  apt-get update
  apt-get install --yes     \
    vim wget expect apache2 \
    mysql-server php5-mysql \
    php5 libapache2-mod-php5 php5-mcrypt php5-gd libssh2-php
}

cleanup() {
  apt-get --yes purge expect wget
  apt-get --yes autoremove
  apt-get clean all
}

run_mysql_programs() {
  # Create MySQL database directory structure
  mysql_install_db
  # Remove dangerous defaults
  SECURE_MYSQL=$(expect -c "
set timeout 10
spawn mysql_secure_installation
expect \"Enter current password for root (enter for none):\"
send \"${MYSQL_PASS}\r\"
expect \"Change the root password?\"
send \"n\r\"
expect \"Remove anonymous users?\"
send \"y\r\"
expect \"Disallow root login remotely?\"
send \"y\r\"
expect \"Remove test database and access to it?\"
send \"y\r\"
expect \"Reload privilege tables now?\"
send \"y\r\"
expect eof
")
  echo "$SECURE_MYSQL"
}

setup_wordpress() {
  if [[ ! -f /var/www/wordpress/wp-config.php ]]; then
    # Install latest Wordpress Code
    cd /var/www
    wget http://wordpress.org/latest.tar.gz
    tar xzvf latest.tar.gz
    rm latest.tar.gz

    # Configure Wordpress with DB settings
    mv /var/www/wordpress/wp-config-sample.php /var/www/wordpress/wp-config.php
    sed -i -e "s/database_name_here/${WP_DB}/g" /var/www/wordpress/wp-config.php
    sed -i -e "s/username_here/${WP_USER}/g" /var/www/wordpress/wp-config.php
    sed -i -e "s/password_here/${WP_PASS}/g" /var/www/wordpress/wp-config.php

    # Set file permissions
    mkdir /var/www/wordpress/wp-content/uploads
    chown -R www-data:www-data /var/www/wordpress
    find /var/www/wordpress/ -type d -exec chmod 755 {} \;
    find /var/www/wordpress/ -type f -exec chmod 644 {} \;
    touch /var/www/wordpress/.htaccess
    chmod 604 /var/www/wordpress/.htaccess
    chmod 600 /var/www/wordpress/wp-config.php

    # Apache config
    sed -i -e 's/www/www\/wordpress/g' /etc/apache2/sites-available/default
    /etc/init.d/apache2 restart
  else
    echo "*** [INFO] Wordpress code exists. Moving on..."
  fi
}

setup_db() {
  mysql --user=root --password=${MYSQL_PASS} -e "CREATE DATABASE IF NOT EXISTS ${WP_DB};"
  # USER IF NOT EXISTS only works for MySQL 5.7+
  # mysql --user=root --password=${MYSQL_PASS} -e "CREATE USER IF NOT EXISTS '${WP_USER}@localhost' IDENTIFIED BY '${WP_PASS}';"
  mysql --user=root --password=${MYSQL_PASS} -e "GRANT ALL PRIVILEGES ON wordpress.* TO '${WP_USER}'@'localhost' IDENTIFIED BY '${WP_PASS}';"
  mysql --user=root --password=${MYSQL_PASS} -e "FLUSH PRIVILEGES;"
}

usage() {
  cat <<-USAGE
  usage: $PROGNAME

  Setups a development Wordpress environment on Debian/Ubuntu.
USAGE
  exit 0
}

main() {
  if [[ "$@" == "-h" || "$@" == "--help" || "$@" == "help" ]]; then usage; fi
  if [[ "$EUID" -ne 0 ]]; then echo "*** [ERROR] Must be run as root" && exit 1; fi

  install_packages
  run_mysql_programs
  setup_db
  setup_wordpress
  cleanup
}

main $@

# https://codex.wordpress.org/Installing_WordPress
# https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-14-04
# https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-on-ubuntu-14-04
